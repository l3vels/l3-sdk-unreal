/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * OpenAPI spec version: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIUtilitiesApiOperations.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Dom/JsonObject.h"
#include "Templates/SharedPointer.h"
#include "HttpModule.h"
#include "PlatformHttp.h"

namespace OpenAPI
{

FString OpenAPIUtilitiesApi::UtilityControllerHealthRequest::ComputePath() const
{
	FString Path(TEXT("/v1/utilities/health"));
	return Path;
}

void OpenAPIUtilitiesApi::UtilityControllerHealthRequest::SetupHttpRequest(const FHttpRequestRef& HttpRequest) const
{
	static const TArray<FString> Consumes = {  };
	//static const TArray<FString> Produces = {  };

	HttpRequest->SetVerb(TEXT("GET"));

}

void OpenAPIUtilitiesApi::UtilityControllerHealthResponse::SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode)
{
	Response::SetHttpResponseCode(InHttpResponseCode);
	switch ((int)InHttpResponseCode)
	{
	case 200:
		SetResponseString(TEXT(""));
		break;
	case 400:
		SetResponseString(TEXT("Account or User was not found."));
		break;
	case 403:
		SetResponseString(TEXT("Forbidden. Session is closed  or expired "));
		break;
	}
}

bool OpenAPIUtilitiesApi::UtilityControllerHealthResponse::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return true;
}

}
