/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * OpenAPI spec version: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

/*
 * OpenAPICollection
 *
 * 
 */
class OPENAPI_API OpenAPICollection : public Model
{
public:
    virtual ~OpenAPICollection() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* The unique identifier for the collection entity. */
	FString Id;
	/* The unique identifier that can be provided by game studio. */
	FString UniqueId;
	/* The name of the collection. */
	FString Name;
	/* A brief description of the collection. */
	FString Description;
	/* An image representing the collection's logo. */
	FString LogoImage;
	/* Additional images associated with the collection, such as screenshots or promotional images. */
	TArray<FString> Medias;
	/* The main or featured image associated with the game. You can set it from the dashboard as main image. */
	FString MainMedia;
	/* A unique URL for the collection on the L3vels platform. */
	FString Url;
	/* A URL link to the collection's webpage. */
	FString WebLink;
	/* The supply represents the number of assets that are available within the Collection. */
	double Supply;
	/* Custom properties that are unique to the collection and defined by the developer to categorize and filter them. */
	TSharedPtr<FJsonObject> CustomPropertyProps;
	/* Additional social links associated with the collection */
	TArray<FString> SocialLinks;
	/* Custom assets fields associated with the collection. */
	TSharedPtr<FJsonObject> CustomAssetProps;
	/* The category or categories that the collection belongs to. */
	TSharedPtr<FJsonObject> Categories;
	/* The current status of the collection. Possible values are: Draft, Active */
	FString Status;
	/* The unique identifier of the account that the Collection belongs to. */
	FString AccountId;
	/* The unique identifier of the game that the collection is associated with. This allows developers to organize their collections by game and helps with tracking and reporting. */
	FString GameId;
	/* The date when the collection was created. */
	FDateTime CreatedOn;
	/* The date when the collection was last modified. */
	FDateTime ModifiedOn;
	/* The Id of the user who created the collection. */
	FString CreatedBy;
	/* The Id of the user who last modified the collection. */
	FString ModifiedBy;
};

}
