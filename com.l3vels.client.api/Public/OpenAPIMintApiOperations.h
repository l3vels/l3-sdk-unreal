/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * OpenAPI spec version: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIMintApi.h"

#include "com.l3vels.client.model/OpenAPIMintBatchInput.h"
#include "com.l3vels.client.model/OpenAPIMintInput.h"

namespace OpenAPI
{

/* Airdrop asset to player
 *
 * Airdrop asset to player
*/
class OPENAPI_API OpenAPIMintApi::AirdropAssetToPlayerRequest : public Request
{
public:
    virtual ~AirdropAssetToPlayerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintInput OpenAPIMintInput;
};

class OPENAPI_API OpenAPIMintApi::AirdropAssetToPlayerResponse : public Response
{
public:
    virtual ~AirdropAssetToPlayerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Award asset to player
 *
 * Award asset to player
*/
class OPENAPI_API OpenAPIMintApi::AwardAssetToPlayerRequest : public Request
{
public:
    virtual ~AwardAssetToPlayerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintInput OpenAPIMintInput;
};

class OPENAPI_API OpenAPIMintApi::AwardAssetToPlayerResponse : public Response
{
public:
    virtual ~AwardAssetToPlayerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Batch mint assets by player
 *
 * Batch mint assets by player. Player must have enough balance to mint.
*/
class OPENAPI_API OpenAPIMintApi::BatchMintAssetByPlayerRequest : public Request
{
public:
    virtual ~BatchMintAssetByPlayerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintBatchInput OpenAPIMintBatchInput;
};

class OPENAPI_API OpenAPIMintApi::BatchMintAssetByPlayerResponse : public Response
{
public:
    virtual ~BatchMintAssetByPlayerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Mint asset
 *
 * Mint an asset by admin to player
*/
class OPENAPI_API OpenAPIMintApi::MintAssetRequest : public Request
{
public:
    virtual ~MintAssetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintInput OpenAPIMintInput;
};

class OPENAPI_API OpenAPIMintApi::MintAssetResponse : public Response
{
public:
    virtual ~MintAssetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Mint asset by player
 *
 * Mint asset by player. Player must have enough balance to mint.
*/
class OPENAPI_API OpenAPIMintApi::MintAssetByPlayerRequest : public Request
{
public:
    virtual ~MintAssetByPlayerRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintInput OpenAPIMintInput;
};

class OPENAPI_API OpenAPIMintApi::MintAssetByPlayerResponse : public Response
{
public:
    virtual ~MintAssetByPlayerResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

/* Batch mint assets
 *
 * Batch mint assets by admin to player
*/
class OPENAPI_API OpenAPIMintApi::MintBatchAssetRequest : public Request
{
public:
    virtual ~MintBatchAssetRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* API key is associated with multiple games. Please include it in to use developers API. */
	FString Authorization;
	OpenAPIMintBatchInput OpenAPIMintBatchInput;
};

class OPENAPI_API OpenAPIMintApi::MintBatchAssetResponse : public Response
{
public:
    virtual ~MintBatchAssetResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    
};

}
